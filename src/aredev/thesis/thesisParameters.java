package aredev.thesis;

import org.irmacard.credentials.idemix.IdemixPublicKey;
import org.irmacard.credentials.idemix.IdemixSecretKey;
import org.irmacard.credentials.info.InfoException;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.List;

/**
 * Created by root on 19-4-16.
 */
public class thesisParameters {
    private final BigInteger p = new BigInteger("10436034022637868273483137633548989700482895839559909621411910579140541345632481969613724849214412062500244238926015929148144084368427474551770487566048119");
    private final BigInteger q = new BigInteger("9204968012315139729618449685392284928468933831570080795536662422367142181432679739143882888540883909887054345986640656981843559062844656131133512640733759");

    private final BigInteger n = new BigInteger("96063359353814070257464989369098573470645843347358957127875426328487326540633303185702306359400766259130239226832166456957259123554826741975265634464478609571816663003684533868318795865194004795637221226902067194633407757767792795252414073029114153019362701793292862118990912516058858923030408920700061749321");
    private final BigInteger S = new BigInteger("68460510129747727135744503403370273952956360997532594630007762045745171031173231339034881007977792852962667675924510408558639859602742661846943843432940752427075903037429735029814040501385798095836297700111333573975220392538916785564158079116348699773855815825029476864341585033111676283214405517983188761136");
    private final BigInteger Z = new BigInteger("44579327840225837958738167571392618381868336415293109834301264408385784355849790902532728798897199236650711385876328647206143271336410651651791998475869027595051047904885044274040212624547595999947339956165755500019260290516022753290814461070607850420459840370288988976468437318992206695361417725670417150636");

    private final List<BigInteger> R = Arrays.asList(
            new BigInteger("75350858539899247205099195870657569095662997908054835686827949842616918065279527697469302927032348256512990413925385972530386004430200361722733856287145745926519366823425418198189091190950415327471076288381822950611094023093577973125683837586451857056904547886289627214081538422503416179373023552964235386251"),
            new BigInteger("16493273636283143082718769278943934592373185321248797185217530224336539646051357956879850630049668377952487166494198481474513387080523771033539152347804895674103957881435528189990601782516572803731501616717599698546778915053348741763191226960285553875185038507959763576845070849066881303186850782357485430766")
    );

    private final List<BigInteger> attributes = Arrays.asList(
            new BigInteger(1, "one".getBytes())
    );

    private BigInteger context;
    private BigInteger nonce;

    private IdemixPublicKey pk;
    private IdemixSecretKey sk;

    public thesisParameters() {
        try {
            pk = new IdemixPublicKey(n, Z, S, R);
            sk = new IdemixSecretKey(p, q);
        } catch (InfoException e) {
            e.printStackTrace();
        }
    }

    public IdemixPublicKey getPk() {
        return pk;
    }

    public IdemixSecretKey getSk() {
        return sk;
    }

    public List<BigInteger> getAttributes() {
        return attributes;
    }

    public BigInteger getNonce() {
        return nonce;
    }

    public void setNonce(BigInteger nonce) {
        this.nonce = nonce;
    }

    public BigInteger getContext() {
        return context;
    }

    public void setContext(BigInteger context) {
        this.context = context;
    }
}
